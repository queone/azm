name: Usage Report

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Usage Report'
        required: true
        default: 'main'
        type: string
  
  # schedule:
  #   - cron: "0 3 * * *"  # Run daily at 3am
  #     timezone: "America/New_York"

permissions:
  id-token: write
  contents:  write
  pull-requests: read

jobs:
  usage-report:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/queone/quebase
    steps:

      # - name: Get GH App Reader details
      #   uses: hashicorp/vault-action@v3
      #   with:
      #     url: https://vault.mydomain.com
      #     method: jwt
      #     path: jwt_github
      #     role: new-vault-role
      #     secrets: |
      #       secret/data/some/path/github/sub/folder/read-access-file APP_ID | APP_ID ;
      #       secret/data/some/path/github/sub/folder/read-access-file INST_ID | INST_ID ;
      #       secret/data/some/path/github/sub/folder/read-access-file PRIV_KEY | PRIV_KEY ;

      - name: Get GH App Updater token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.GH_APPID }}
          private-key: ${{ secrets.GH_PRIVKEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.branch || 'main' }}
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Run Usage Report
        run: |
          # echo "Using APP_ID : ${APP_ID:-Token_Not_Acquired}"
          # echo "Using INST_ID: ${INST_ID:-Token_Not_Acquired}"
          # [[ -z "${APP_ID}"" || -z "${INST_ID}"" || -z "${PRIV_KEY}"" ]] && exit 1
          # python scripts/usage_report.py
          printf "\n# Someone wuz here YET AGAIN!\n\n" >> README.md
      
      - name: Commit changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory /__w/azm/azm
          git pull
          git add .
          Date=$(TZ="America/New_York" date '+%a, %Y-%b-%d %I:%M%p')
          git commit -m "Automated Usage Report: ${Date}" || echo "No changes to commit"
          git push

      # # ALTERNATE: PR with auto-merge
      # - name: Create new branch and commit changes
      #   run: |
      #     git config --global user.name "github-actions[bot]"
      #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
      #     git config --global --add safe.directory /__w/azm/azm
      #     git checkout -b usage-report-$(date +%Y%m%d%H%M%S)
      #     git add README.md
      #     Date=$(TZ="America/New_York" date '+%a, %Y-%b-%d %I:%M%p')
      #     git commit -m "Usage Report: ${Date}" || echo "No changes to commit"
      #     git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)

      # - name: Create pull request
      #   # GH_TOKEN must have contents: write and pull-requests: write
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     gh pr create \
      #       --title "Automated Usage Report" \
      #       --body "Daily usage report update." \
      #       --base main \
      #       --head $(git rev-parse --abbrev-ref HEAD)

      # - name: Enable auto-merge
      #   # Repo settings must allow auto-merge:
      #   # Settings > Pull Requests > Enable auto-merge
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     pr_url=$(gh pr list --state open --head $(git rev-parse --abbrev-ref HEAD) --json url -q '.[0].url')
      #     gh pr merge "$pr_url" --auto --squash

      # # Optional: Auto-approve step (requires PAT or GitHub App with approve permission)
      # # - name: Auto-approve PR (example, not active)
      # #   uses: hmarr/auto-approve-action@v3
      # #   with:
      # #     github-token: ${{ secrets.PAT_WITH_APPROVE_SCOPE }}
